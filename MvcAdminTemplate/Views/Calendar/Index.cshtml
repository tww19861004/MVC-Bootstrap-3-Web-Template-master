@{
    ViewBag.Title = "DatePicker";
}
@Html.Partial("_LeftMenu")
@Styles.Render("~/Content/Vendors")
<div class="col-md-10">
    <h2>Example</h2>
    <p>Attached to a field with the format specified via options.</p>
    <div class="well">
        <input type="text" class="span2" value="02-16-2012" id="dp1">
    </div>
    <p>Attachet to a field with the format specified via data tag.</p>
    <div class="well">
        <input type="text" class="span2" value="02/16/12" data-date-format="mm/dd/yy" id="dp2">
    </div>
    <p>As component.</p>
    <div class="well">
        <!-- component mode is based on bootstrap 2... waiting for an update-->
        <div class="input-append input-group date" id="dp3" data-date="12-02-2012" data-date-format="dd-mm-yyyy">
            <input class="form-control span2" size="16" type="text" value="12-02-2012" readonly>
            <span class="input-group-addon add-on"><i class="glyphicon glyphicon-calendar"></i></span>
        </div>
    </div>
    <p>Start with years viewMode.</p>
    <div class="well">
        <!-- component mode is based on bootstrap 2... waiting for an update-->
        <div class="input-append input-group date" id="dpYears" data-date="12-02-2012" data-date-format="dd-mm-yyyy" data-date-viewmode="years">
            <input class="form-control span2" size="16" type="text" value="12-02-2012" readonly>
            <span class="input-group-addon add-on"><i class="glyphicon glyphicon-calendar"></i></span>
        </div>
    </div>
    <p>Limit the view mode to months</p>
    <div class="well">
        <!-- component mode is based on bootstrap 2... waiting for an update-->
        <div class="input-append input-group date" id="dpMonths" data-date="102/2012" data-date-format="mm/yyyy" data-date-viewmode="years" data-date-minviewmode="months">
            <input class="form-control span2" size="16" type="text" value="02/2012" readonly>
            <span class="input-group-addon add-on"><i class="glyphicon glyphicon-calendar"></i></span>
        </div>
    </div>
    <p>Attached to other elment then field and using events to work with the date values.</p>
    <div class="well">


        <div class="alert alert-error" id="alert">
            <strong>Oh snap!</strong>
        </div>
        <table class="table">
            <thead>
                <tr>
                    <th>Start date<a href="#" class="btn small" id="dp4" data-date-format="yyyy-mm-dd" data-date="2012-02-20">Change</a></th>
                    <th>End date<a href="#" class="btn small" id="dp5" data-date-format="yyyy-mm-dd" data-date="2012-02-25">Change</a></th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td id="startDate">2012-02-20</td>
                    <td id="endDate">2012-02-25</td>
                </tr>
            </tbody>
        </table>
    </div>
    <p>Disabling dates in the past and dependent disabling.</p>
    <div class="well">
        <table class="table">
            <thead>
                <tr>
                    <th>Check in: <input type="text" class="span2" value="" id="dpd1"></th>
                    <th>Check out: <input type="text" class="span2" value="" id="dpd2"></th>
                </tr>
            </thead>
        </table>
    </div>
</div>

@section scripts
{
    @Scripts.Render("~/bundles/vendors")

    <script type="text/javascript">
        $(function () {

            $('#dp1').datepicker({
                format: 'mm-dd-yyyy'
            });
            $('#dp2').datepicker();
            $('#dp3').datepicker();
            $('#dp3').datepicker();
            $('#dpYears').datepicker();
            $('#dpMonths').datepicker();


            var startDate = new Date(2012, 1, 20);
            var endDate = new Date(2012, 1, 25);
            $('#dp4').datepicker()
                .on('changeDate', function (ev) {
                    if (ev.date.valueOf() > endDate.valueOf()) {
                        $('#alert').show().find('strong').text('The start date can not be greater then the end date');
                    } else {
                        $('#alert').hide();
                        startDate = new Date(ev.date);
                        $('#startDate').text($('#dp4').data('date'));
                    }
                    $('#dp4').datepicker('hide');
                });
            $('#dp5').datepicker()
                .on('changeDate', function (ev) {
                    if (ev.date.valueOf() < startDate.valueOf()) {
                        $('#alert').show().find('strong').text('The end date can not be less then the start date');
                    } else {
                        $('#alert').hide();
                        endDate = new Date(ev.date);
                        $('#endDate').text($('#dp5').data('date'));
                    }
                    $('#dp5').datepicker('hide');
                });

            // disabling dates
            var nowTemp = new Date();
            var now = new Date(nowTemp.getFullYear(), nowTemp.getMonth(), nowTemp.getDate(), 0, 0, 0, 0);

            var checkin = $('#dpd1').datepicker({
                onRender: function (date) {
                    return date.valueOf() < now.valueOf() ? 'disabled' : '';
                }
            }).on('changeDate', function (ev) {
                if (ev.date.valueOf() > checkout.date.valueOf()) {
                    var newDate = new Date(ev.date)
                    newDate.setDate(newDate.getDate() + 1);
                    checkout.setValue(newDate);
                }
                checkin.hide();
                $('#dpd2')[0].focus();
            }).data('datepicker');
            var checkout = $('#dpd2').datepicker({
                onRender: function (date) {
                    return date.valueOf() <= checkin.date.valueOf() ? 'disabled' : '';
                }
            }).on('changeDate', function (ev) {
                checkout.hide();
            }).data('datepicker');
        });
    </script>
}
